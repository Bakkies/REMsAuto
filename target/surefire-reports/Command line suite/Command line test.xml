<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="CPT-EN-103B10" name="Command line test" tests="33" failures="0" timestamp="4 Sep 2014 15:48:19 GMT" time="7.175" errors="0">
  <testcase name="@BeforeClass setUpClass" time="0.0" classname="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;entityManagerFactory&amp;apos; defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest.setUpClass(AutoSupplierRepositoryTest.java:142)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase name="@BeforeMethod setUpMethod" time="0.0" classname="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUpMethod -->
  <testcase name="@AfterMethod tearDownMethod" time="0.0" classname="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDownMethod -->
  <testcase name="@BeforeClass setUpClass" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileRepositoryTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;entityManagerFactory&amp;apos; defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.AutomobileRepositoryTest.setUpClass(AutomobileRepositoryTest.java:117)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase name="@BeforeMethod setUpMethod" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileRepositoryTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUpMethod -->
  <testcase name="@AfterMethod tearDownMethod" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDownMethod -->
  <testcase name="@BeforeClass setUpClass" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;entityManagerFactory&amp;apos; defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest.setUpClass(AutomobileTypeRepositoryTest.java:154)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase name="@BeforeMethod setUpMethod" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUpMethod -->
  <testcase name="@AfterMethod tearDownMethod" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDownMethod -->
  <testcase name="@BeforeClass setUpClass" time="0.0" classname="com.mycompany.carshop.test.repository.CreditCardRepositoryTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;entityManagerFactory&amp;apos; defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.CreditCardRepositoryTest.setUpClass(CreditCardRepositoryTest.java:94)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase name="@BeforeMethod setUpMethod" time="0.0" classname="com.mycompany.carshop.test.repository.CreditCardRepositoryTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUpMethod -->
  <testcase name="@AfterMethod tearDownMethod" time="0.0" classname="com.mycompany.carshop.test.repository.CreditCardRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDownMethod -->
  <testcase name="@BeforeClass setUpClass" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;entityManagerFactory&amp;apos; defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest.setUpClass(CustomerAddressRepositoryTest.java:85)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase name="@BeforeMethod setUpMethod" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUpMethod -->
  <testcase name="@AfterMethod tearDownMethod" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDownMethod -->
  <testcase name="@BeforeClass setUpClass" time="0.0" classname="com.mycompany.carshop.test.services.CustomerInfoServiceTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;entityManagerFactory&amp;apos; defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.services.CustomerInfoServiceTest.setUpClass(CustomerInfoServiceTest.java:62)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase name="@BeforeMethod setUpMethod" time="0.0" classname="com.mycompany.carshop.test.services.CustomerInfoServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUpMethod -->
  <testcase name="@AfterMethod tearDownMethod" time="0.0" classname="com.mycompany.carshop.test.services.CustomerInfoServiceTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDownMethod -->
  <testcase name="@AfterClass tearDownClass" time="0.0" classname="com.mycompany.carshop.test.services.CustomerInfoServiceTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownClass -->
  <testcase name="@BeforeClass setUpClass" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerInvoiceTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;entityManagerFactory&amp;apos; defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.CustomerInvoiceTest.setUpClass(CustomerInvoiceTest.java:89)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase name="@BeforeMethod setUpMethod" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerInvoiceTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUpMethod -->
  <testcase name="@AfterMethod tearDownMethod" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerInvoiceTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDownMethod -->
  <testcase name="@BeforeClass setUpClass" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerRepositoryTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;entityManagerFactory&amp;apos; defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.CustomerRepositoryTest.setUpClass(CustomerRepositoryTest.java:151)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase name="@BeforeMethod setUpMethod" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUpMethod -->
  <testcase name="@AfterMethod tearDownMethod" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDownMethod -->
  <testcase name="@BeforeClass setUpClass" time="0.0" classname="com.mycompany.carshop.test.repository.OrderRepositoryTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;entityManagerFactory&amp;apos; defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.OrderRepositoryTest.setUpClass(OrderRepositoryTest.java:133)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase name="@BeforeMethod setUpMethod" time="0.0" classname="com.mycompany.carshop.test.repository.OrderRepositoryTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUpMethod -->
  <testcase name="@AfterMethod tearDownMethod" time="0.0" classname="com.mycompany.carshop.test.repository.OrderRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDownMethod -->
  <testcase name="@AfterClass tearDownClass" time="0.0" classname="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownClass -->
  <testcase name="@AfterClass tearDownClass" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownClass -->
  <testcase name="@AfterClass tearDownClass" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownClass -->
  <testcase name="@AfterClass tearDownClass" time="0.0" classname="com.mycompany.carshop.test.repository.CreditCardRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownClass -->
  <testcase name="@AfterClass tearDownClass" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownClass -->
  <testcase name="@AfterClass tearDownClass" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerInvoiceTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownClass -->
  <testcase name="@AfterClass tearDownClass" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownClass -->
  <testcase name="@AfterClass tearDownClass" time="0.0" classname="com.mycompany.carshop.test.repository.OrderRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownClass -->
  <testcase name="createAutoSupplier" time="0.001" classname="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest">
    <skipped/>
  </testcase> <!-- createAutoSupplier -->
  <testcase name="createAutomobile" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileRepositoryTest">
    <skipped/>
  </testcase> <!-- createAutomobile -->
  <testcase name="createAutomobileType" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest">
    <skipped/>
  </testcase> <!-- createAutomobileType -->
  <testcase name="createCreditCard" time="0.0" classname="com.mycompany.carshop.test.repository.CreditCardRepositoryTest">
    <skipped/>
  </testcase> <!-- createCreditCard -->
  <testcase name="createCustomerAddress" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest">
    <skipped/>
  </testcase> <!-- createCustomerAddress -->
  <testcase name="getCustomerAddress" time="0.0" classname="com.mycompany.carshop.test.services.CustomerInfoServiceTest">
    <skipped/>
  </testcase> <!-- getCustomerAddress -->
  <testcase name="createInvoice" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerInvoiceTest">
    <skipped/>
  </testcase> <!-- createInvoice -->
  <testcase name="createCustomer" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- createCustomer -->
  <testcase name="createOrder" time="0.0" classname="com.mycompany.carshop.test.repository.OrderRepositoryTest">
    <skipped/>
  </testcase> <!-- createOrder -->
  <testcase name="readAutoSupplier" time="0.0" classname="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest">
    <skipped/>
  </testcase> <!-- readAutoSupplier -->
  <testcase name="readAutomobile" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileRepositoryTest">
    <skipped/>
  </testcase> <!-- readAutomobile -->
  <testcase name="readAutomobileType" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest">
    <skipped/>
  </testcase> <!-- readAutomobileType -->
  <testcase name="readCreditCard" time="0.0" classname="com.mycompany.carshop.test.repository.CreditCardRepositoryTest">
    <skipped/>
  </testcase> <!-- readCreditCard -->
  <testcase name="readCustomerAddress" time="0.001" classname="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest">
    <skipped/>
  </testcase> <!-- readCustomerAddress -->
  <testcase name="readInvoice" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerInvoiceTest">
    <skipped/>
  </testcase> <!-- readInvoice -->
  <testcase name="readCustomer" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- readCustomer -->
  <testcase name="readOrder" time="0.0" classname="com.mycompany.carshop.test.repository.OrderRepositoryTest">
    <skipped/>
  </testcase> <!-- readOrder -->
  <testcase name="updateAutoSupplier" time="0.0" classname="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest">
    <skipped/>
  </testcase> <!-- updateAutoSupplier -->
  <testcase name="updateAutomobile" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileRepositoryTest">
    <skipped/>
  </testcase> <!-- updateAutomobile -->
  <testcase name="updateAutomobileType" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest">
    <skipped/>
  </testcase> <!-- updateAutomobileType -->
  <testcase name="updateCreditCard" time="0.0" classname="com.mycompany.carshop.test.repository.CreditCardRepositoryTest">
    <skipped/>
  </testcase> <!-- updateCreditCard -->
  <testcase name="updateCustomerAddress" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest">
    <skipped/>
  </testcase> <!-- updateCustomerAddress -->
  <testcase name="updateInvoice" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerInvoiceTest">
    <skipped/>
  </testcase> <!-- updateInvoice -->
  <testcase name="updateCustomer" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- updateCustomer -->
  <testcase name="updateOrder" time="0.0" classname="com.mycompany.carshop.test.repository.OrderRepositoryTest">
    <skipped/>
  </testcase> <!-- updateOrder -->
  <testcase name="deleteAutoSupplier" time="0.0" classname="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest">
    <skipped/>
  </testcase> <!-- deleteAutoSupplier -->
  <testcase name="deleteAutomobile" time="0.0" classname="com.mycompany.carshop.test.repository.AutomobileRepositoryTest">
    <skipped/>
  </testcase> <!-- deleteAutomobile -->
  <testcase name="deleteAutomobileType" time="0.001" classname="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest">
    <skipped/>
  </testcase> <!-- deleteAutomobileType -->
  <testcase name="deleteCreditCard" time="0.0" classname="com.mycompany.carshop.test.repository.CreditCardRepositoryTest">
    <skipped/>
  </testcase> <!-- deleteCreditCard -->
  <testcase name="deleteCustomerAddress" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest">
    <skipped/>
  </testcase> <!-- deleteCustomerAddress -->
  <testcase name="deleteInvoice" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerInvoiceTest">
    <skipped/>
  </testcase> <!-- deleteInvoice -->
  <testcase name="deleteCustomer" time="0.0" classname="com.mycompany.carshop.test.repository.CustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- deleteCustomer -->
  <testcase name="deleteOrder" time="0.0" classname="com.mycompany.carshop.test.repository.OrderRepositoryTest">
    <skipped/>
  </testcase> <!-- deleteOrder -->
</testsuite> <!-- Command line test -->
