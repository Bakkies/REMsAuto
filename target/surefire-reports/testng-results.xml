<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="33" failed="0" total="33" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="7175" started-at="2014-09-04T15:48:11Z" finished-at="2014-09-04T15:48:18Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="7175" started-at="2014-09-04T15:48:11Z" finished-at="2014-09-04T15:48:18Z">
      <class name="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest@265121]" name="setUpClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:11Z" finished-at="2014-09-04T17:48:11Z">
          <exception class="org.springframework.beans.factory.BeanCreationException">
            <message>
              <![CDATA[Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest.setUpClass(AutoSupplierRepositoryTest.java:142)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="SKIP" signature="createAutoSupplier()[pri:0, instance:com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest@265121]" name="createAutoSupplier" duration-ms="1" started-at="2014-09-04T17:48:15Z" finished-at="2014-09-04T17:48:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAutoSupplier -->
        <test-method status="SKIP" signature="setUpMethod()[pri:0, instance:com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest@265121]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:15Z" finished-at="2014-09-04T17:48:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="SKIP" signature="tearDownMethod()[pri:0, instance:com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest@265121]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:15Z" finished-at="2014-09-04T17:48:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="SKIP" signature="readAutoSupplier()[pri:0, instance:com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest@265121]" name="readAutoSupplier" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest.createAutoSupplier" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readAutoSupplier -->
        <test-method status="SKIP" signature="updateAutoSupplier()[pri:0, instance:com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest@265121]" name="updateAutoSupplier" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest.readAutoSupplier" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAutoSupplier -->
        <test-method status="SKIP" signature="deleteAutoSupplier()[pri:0, instance:com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest@265121]" name="deleteAutoSupplier" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest.updateAutoSupplier" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAutoSupplier -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest@265121]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.mycompany.carshop.test.repository.AutoSupplierRepositoryTest -->
      <class name="com.mycompany.carshop.test.repository.AutomobileRepositoryTest">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileRepositoryTest@19853c2]" name="setUpClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:15Z" finished-at="2014-09-04T17:48:15Z">
          <exception class="org.springframework.beans.factory.BeanCreationException">
            <message>
              <![CDATA[Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.AutomobileRepositoryTest.setUpClass(AutomobileRepositoryTest.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="SKIP" signature="setUpMethod()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileRepositoryTest@19853c2]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:15Z" finished-at="2014-09-04T17:48:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="SKIP" signature="tearDownMethod()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileRepositoryTest@19853c2]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:15Z" finished-at="2014-09-04T17:48:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="SKIP" signature="createAutomobile()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileRepositoryTest@19853c2]" name="createAutomobile" duration-ms="0" started-at="2014-09-04T17:48:15Z" finished-at="2014-09-04T17:48:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAutomobile -->
        <test-method status="SKIP" signature="readAutomobile()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileRepositoryTest@19853c2]" name="readAutomobile" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.AutomobileRepositoryTest.createAutomobile" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readAutomobile -->
        <test-method status="SKIP" signature="updateAutomobile()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileRepositoryTest@19853c2]" name="updateAutomobile" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.AutomobileRepositoryTest.readAutomobile" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAutomobile -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileRepositoryTest@19853c2]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="SKIP" signature="deleteAutomobile()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileRepositoryTest@19853c2]" name="deleteAutomobile" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.AutomobileRepositoryTest.updateAutomobile" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAutomobile -->
      </class> <!-- com.mycompany.carshop.test.repository.AutomobileRepositoryTest -->
      <class name="com.mycompany.carshop.test.repository.CustomerInvoiceTest">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerInvoiceTest@1a2f9dd]" name="setUpClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:17Z" finished-at="2014-09-04T17:48:17Z">
          <exception class="org.springframework.beans.factory.BeanCreationException">
            <message>
              <![CDATA[Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.CustomerInvoiceTest.setUpClass(CustomerInvoiceTest.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="SKIP" signature="tearDownMethod()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerInvoiceTest@1a2f9dd]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:17Z" finished-at="2014-09-04T17:48:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="SKIP" signature="createInvoice()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerInvoiceTest@1a2f9dd]" name="createInvoice" duration-ms="0" started-at="2014-09-04T17:48:17Z" finished-at="2014-09-04T17:48:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInvoice -->
        <test-method status="SKIP" signature="setUpMethod()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerInvoiceTest@1a2f9dd]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:17Z" finished-at="2014-09-04T17:48:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="SKIP" signature="readInvoice()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerInvoiceTest@1a2f9dd]" name="readInvoice" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CustomerInvoiceTest.createInvoice" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readInvoice -->
        <test-method status="SKIP" signature="updateInvoice()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerInvoiceTest@1a2f9dd]" name="updateInvoice" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CustomerInvoiceTest.readInvoice" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateInvoice -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerInvoiceTest@1a2f9dd]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="SKIP" signature="deleteInvoice()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerInvoiceTest@1a2f9dd]" name="deleteInvoice" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CustomerInvoiceTest.updateInvoice" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteInvoice -->
      </class> <!-- com.mycompany.carshop.test.repository.CustomerInvoiceTest -->
      <class name="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest@b04589]" name="setUpClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:15Z" finished-at="2014-09-04T17:48:15Z">
          <exception class="org.springframework.beans.factory.BeanCreationException">
            <message>
              <![CDATA[Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest.setUpClass(AutomobileTypeRepositoryTest.java:154)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="SKIP" signature="tearDownMethod()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest@b04589]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="SKIP" signature="createAutomobileType()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest@b04589]" name="createAutomobileType" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAutomobileType -->
        <test-method status="SKIP" signature="setUpMethod()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest@b04589]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="SKIP" signature="readAutomobileType()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest@b04589]" name="readAutomobileType" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest.createAutomobileType" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readAutomobileType -->
        <test-method status="SKIP" signature="updateAutomobileType()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest@b04589]" name="updateAutomobileType" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest.readAutomobileType" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAutomobileType -->
        <test-method status="SKIP" signature="deleteAutomobileType()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest@b04589]" name="deleteAutomobileType" duration-ms="1" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest.updateAutomobileType" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAutomobileType -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest@b04589]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.mycompany.carshop.test.repository.AutomobileTypeRepositoryTest -->
      <class name="com.mycompany.carshop.test.services.CustomerInfoServiceTest">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:com.mycompany.carshop.test.services.CustomerInfoServiceTest@19bd8b4]" name="setUpClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <exception class="org.springframework.beans.factory.BeanCreationException">
            <message>
              <![CDATA[Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.services.CustomerInfoServiceTest.setUpClass(CustomerInfoServiceTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="SKIP" signature="getCustomerAddress()[pri:0, instance:com.mycompany.carshop.test.services.CustomerInfoServiceTest@19bd8b4]" name="getCustomerAddress" duration-ms="0" started-at="2014-09-04T17:48:17Z" finished-at="2014-09-04T17:48:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCustomerAddress -->
        <test-method status="SKIP" signature="setUpMethod()[pri:0, instance:com.mycompany.carshop.test.services.CustomerInfoServiceTest@19bd8b4]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:17Z" finished-at="2014-09-04T17:48:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="SKIP" signature="tearDownMethod()[pri:0, instance:com.mycompany.carshop.test.services.CustomerInfoServiceTest@19bd8b4]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:17Z" finished-at="2014-09-04T17:48:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:com.mycompany.carshop.test.services.CustomerInfoServiceTest@19bd8b4]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:17Z" finished-at="2014-09-04T17:48:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.mycompany.carshop.test.services.CustomerInfoServiceTest -->
      <class name="com.mycompany.carshop.test.repository.CustomerRepositoryTest">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerRepositoryTest@a553e2]" name="setUpClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:17Z" finished-at="2014-09-04T17:48:17Z">
          <exception class="org.springframework.beans.factory.BeanCreationException">
            <message>
              <![CDATA[Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.CustomerRepositoryTest.setUpClass(CustomerRepositoryTest.java:151)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="SKIP" signature="tearDownMethod()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerRepositoryTest@a553e2]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="SKIP" signature="createCustomer()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerRepositoryTest@a553e2]" name="createCustomer" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomer -->
        <test-method status="SKIP" signature="setUpMethod()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerRepositoryTest@a553e2]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="SKIP" signature="readCustomer()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerRepositoryTest@a553e2]" name="readCustomer" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CustomerRepositoryTest.createCustomer" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readCustomer -->
        <test-method status="SKIP" signature="updateCustomer()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerRepositoryTest@a553e2]" name="updateCustomer" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CustomerRepositoryTest.readCustomer" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCustomer -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerRepositoryTest@a553e2]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="SKIP" signature="deleteCustomer()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerRepositoryTest@a553e2]" name="deleteCustomer" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CustomerRepositoryTest.updateCustomer" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCustomer -->
      </class> <!-- com.mycompany.carshop.test.repository.CustomerRepositoryTest -->
      <class name="com.mycompany.carshop.test.repository.CreditCardRepositoryTest">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:com.mycompany.carshop.test.repository.CreditCardRepositoryTest@18c14b3]" name="setUpClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <exception class="org.springframework.beans.factory.BeanCreationException">
            <message>
              <![CDATA[Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.CreditCardRepositoryTest.setUpClass(CreditCardRepositoryTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="SKIP" signature="createCreditCard()[pri:0, instance:com.mycompany.carshop.test.repository.CreditCardRepositoryTest@18c14b3]" name="createCreditCard" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCreditCard -->
        <test-method status="SKIP" signature="setUpMethod()[pri:0, instance:com.mycompany.carshop.test.repository.CreditCardRepositoryTest@18c14b3]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="SKIP" signature="tearDownMethod()[pri:0, instance:com.mycompany.carshop.test.repository.CreditCardRepositoryTest@18c14b3]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="SKIP" signature="readCreditCard()[pri:0, instance:com.mycompany.carshop.test.repository.CreditCardRepositoryTest@18c14b3]" name="readCreditCard" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CreditCardRepositoryTest.createCreditCard" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readCreditCard -->
        <test-method status="SKIP" signature="updateCreditCard()[pri:0, instance:com.mycompany.carshop.test.repository.CreditCardRepositoryTest@18c14b3]" name="updateCreditCard" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CreditCardRepositoryTest.readCreditCard" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCreditCard -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:com.mycompany.carshop.test.repository.CreditCardRepositoryTest@18c14b3]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="SKIP" signature="deleteCreditCard()[pri:0, instance:com.mycompany.carshop.test.repository.CreditCardRepositoryTest@18c14b3]" name="deleteCreditCard" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CreditCardRepositoryTest.updateCreditCard" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCreditCard -->
      </class> <!-- com.mycompany.carshop.test.repository.CreditCardRepositoryTest -->
      <class name="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest@1290ef4]" name="setUpClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <exception class="org.springframework.beans.factory.BeanCreationException">
            <message>
              <![CDATA[Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest.setUpClass(CustomerAddressRepositoryTest.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="SKIP" signature="setUpMethod()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest@1290ef4]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="SKIP" signature="tearDownMethod()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest@1290ef4]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="SKIP" signature="createCustomerAddress()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest@1290ef4]" name="createCustomerAddress" duration-ms="0" started-at="2014-09-04T17:48:16Z" finished-at="2014-09-04T17:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerAddress -->
        <test-method status="SKIP" signature="readCustomerAddress()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest@1290ef4]" name="readCustomerAddress" duration-ms="1" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest.createCustomerAddress" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readCustomerAddress -->
        <test-method status="SKIP" signature="updateCustomerAddress()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest@1290ef4]" name="updateCustomerAddress" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest.readCustomerAddress" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCustomerAddress -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest@1290ef4]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="SKIP" signature="deleteCustomerAddress()[pri:0, instance:com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest@1290ef4]" name="deleteCustomerAddress" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest.updateCustomerAddress" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCustomerAddress -->
      </class> <!-- com.mycompany.carshop.test.repository.CustomerAddressRepositoryTest -->
      <class name="com.mycompany.carshop.test.repository.OrderRepositoryTest">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:com.mycompany.carshop.test.repository.OrderRepositoryTest@c21d01]" name="setUpClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <exception class="org.springframework.beans.factory.BeanCreationException">
            <message>
              <![CDATA[Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.mycompany.carshop.test.ConnectionConfigTest: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:922)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:73)
	at com.mycompany.carshop.test.repository.OrderRepositoryTest.setUpClass(OrderRepositoryTest.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:290)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:310)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1510)
	... 45 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.mycompany.carshop.domain.Automobile column: unitPrice (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:718)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:740)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:493)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1324)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1782)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="SKIP" signature="setUpMethod()[pri:0, instance:com.mycompany.carshop.test.repository.OrderRepositoryTest@c21d01]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="SKIP" signature="tearDownMethod()[pri:0, instance:com.mycompany.carshop.test.repository.OrderRepositoryTest@c21d01]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="SKIP" signature="createOrder()[pri:0, instance:com.mycompany.carshop.test.repository.OrderRepositoryTest@c21d01]" name="createOrder" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method status="SKIP" signature="readOrder()[pri:0, instance:com.mycompany.carshop.test.repository.OrderRepositoryTest@c21d01]" name="readOrder" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.OrderRepositoryTest.createOrder" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readOrder -->
        <test-method status="SKIP" signature="updateOrder()[pri:0, instance:com.mycompany.carshop.test.repository.OrderRepositoryTest@c21d01]" name="updateOrder" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.OrderRepositoryTest.readOrder" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOrder -->
        <test-method status="SKIP" signature="deleteOrder()[pri:0, instance:com.mycompany.carshop.test.repository.OrderRepositoryTest@c21d01]" name="deleteOrder" duration-ms="0" started-at="2014-09-04T17:48:18Z" depends-on-methods="com.mycompany.carshop.test.repository.OrderRepositoryTest.updateOrder" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteOrder -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:com.mycompany.carshop.test.repository.OrderRepositoryTest@c21d01]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2014-09-04T17:48:18Z" finished-at="2014-09-04T17:48:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.mycompany.carshop.test.repository.OrderRepositoryTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
